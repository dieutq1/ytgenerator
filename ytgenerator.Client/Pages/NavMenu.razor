@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation

@rendermode RenderMode.InteractiveWebAssembly

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">AI Content</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (isLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="auth/account">
                    <span class="bi bi-person-circle-nav-menu" aria-hidden="true"></span> Tài khoản
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="process">
                    <span class="bi bi-icon-processing" aria-hidden="true"></span> Tạo content
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick="Logout" style="cursor: pointer;">
                    <span class="bi bi-box-arrow-in-right-nav-menu" aria-hidden="true"></span> Đăng xuất
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="auth/register">
                    <span class="bi bi-person-plus-fill-nav-menu" aria-hidden="true"></span> Đăng ký
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="auth/login">
                    <span class="bi bi-box-arrow-in-right-nav-menu" aria-hidden="true"></span> Đăng nhập
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isLoggedIn = authState.User.Identity.IsAuthenticated;
    }

    private async Task Logout()
    {
        Console.WriteLine("logout");
        await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).NotifyUserLogout();
        Navigation.NavigateTo("/", true);
    }
}